# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  tag: 'latest'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - script: mv bookstore-api.py app.py
      displayName: 'changing the file name'
    - script: docker build -t bookstoreapi:latest .
      displayName: 'docker build'
    - script: docker images
      displayName: 'docker images'
    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Azure subscription 1(4182b63f-bfaa-4c6b-a529-155e10b3a804)'
        azureContainerRegistry: '{"loginServer":"emineacr.azurecr.io", "id" : "/subscriptions/4182b63f-bfaa-4c6b-a529-155e10b3a804/resourceGroups/learning/providers/Microsoft.ContainerRegistry/registries/emineacr"}'
        dockerComposeFile: '**/docker-compose.yml'
        projectName: 'bookstoreapi'
        action: 'Push services'
        additionalImageTags: 'bookstoreapi'
        includeLatestTag: true
    
    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'Azure subscription 1(4182b63f-bfaa-4c6b-a529-155e10b3a804)'
        azureContainerRegistry: '{"loginServer":"emineacr.azurecr.io", "id" : "/subscriptions/4182b63f-bfaa-4c6b-a529-155e10b3a804/resourceGroups/learning/providers/Microsoft.ContainerRegistry/registries/emineacr"}'
        dockerComposeFile: '**/docker-compose.yml'
        projectName: 'bookstoreapi'
        action: 'Run a Docker Compose command'
        dockerComposeCommand: 'up'
    
    - task: DockerCompose@0
      displayName: Combine configuration
      inputs:
        action: Combine configuration
        azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
        azureContainerRegistry: $(azureContainerRegistry)
        dockerComposeFile: docker-compose.yml
        additionalDockerComposeFiles: docker-compose.override.yml
        projectName: $(Build.Repository.Name)
        qualifyImageNames: true
        outputDockerComposeFile: $(Build.StagingDirectory)/docker-compose.yml
    
    - script: cat $(Build.StagingDirectory)/docker-compose.yml
      displayName: 'compose config'

